{
  "name": "colab-vr",
  "version": "0.1.0",
  "description": "Collaborative VR Modeling",
  "main": "index.js",
  "author": "Trygve Wastvedt",
  "license": "MIT",
  "engines": {
    "node": "8.11.2"
  },
  "dependencies": {
    "@types/browserify": "^12.0.33",
    "@types/express": "4.16.0",
    "@types/mousetrap": "^1.6.0",
    "@types/nunjucks": "3.0.0",
    "@types/socket.io": "1.4.36",
    "@types/three": "0.92.8",
    "@types/tween.js": "^16.9.0",
    "aframe": "^0.8.2",
    "aframe-extras": "4.1.2",
    "aframe-orbit-controls-component-2": "0.1.14",
    "aframe-sprite-component": "0.1.1",
    "aframe-template-component": "3.2.1",
    "babel-core": "^6.26.3",
    "babel-preset-env": "^1.7.0",
    "babelify": "^8.0.0",
    "browserify": "16.2.2",
    "globstar": "1.0.0",
    "glslify": "6.1.1",
    "livereload": "^0.7.0",
    "mousetrap": "1.6.2",
    "networked-aframe": "^0.6.1",
    "nodemon": "^1.17.5",
    "nunjucks": "3.1.3",
    "onchange": "4.0.0",
    "rimraf": "2.6.2",
    "stringify": "5.2.0",
    "tsify": "4.0.0",
    "typescript": "2.8.4",
    "watchify": "3.11.0"
  },
  "scripts": {
    "postinstall": "cp fixes/three-core.d.ts node_modules/@types/three/ && cp fixes/movement-controls.js node_modules/aframe-extras/src/controls/ && mkdir dist",
    "start": "node index.js",
    "build:ts": "browserify client/app.ts --no-bundle-external -p [ tsify --global ] -t [ stringify --extensions [.glsl] ] -o dist/app.js",
    "build:ts-dev": "npm run build:ts -- --debug",
    "build:libs": "rm -f dist/libs.js && browserify -r aframe -r aframe-extras/src/controls -r aframe-template-component -r networked-aframe -r mousetrap --debug -o dist/libs.js",
    "build": "npm run clean && npm run build:libs && npm run build:ts",
    "clean": "rimraf dist && mkdir dist",
    "watch:ts": "rm -f dist/app.js && watchify client/app.ts -v --no-bundle-external -p [ tsify --global ] -t [ stringify --extensions [.glsl] ] -o dist/app.js --debug --ignore-watch=\"dist/**/**\"",
    "dev": "parallelshell \"npm run watch:ts\" \"npm run start-dev\"",
    "start-dev": "nodemon --ignore client/ --ignore dist/ index.js",
    "heroku-postbuild": "npm run build"
  },
  "devDependencies": {
    "parallelshell": "3.0.2",
    "tslint": "5.10.0"
  }
}
